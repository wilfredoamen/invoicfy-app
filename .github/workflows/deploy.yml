name: Provision and Deploy Invoify

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/invoify
  VERSION: ${{ github.sha }}

jobs:
  provision_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Write SSH key to file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/oz-key-pair.pem
        chmod 600 ~/.ssh/oz-key-pair.pem

    - name: Terraform Init & Apply
      working-directory: ./terraform
      run: |
        terraform init
        terraform apply -auto-approve -var="private_key_path=~/.ssh/oz-key-pair.pem"

    - name: Extract EC2 Public IP
      id: ec2
      working-directory: ./terraform
      run: |
        IP=$(terraform output -raw ec2_public_ip)
        echo "EC2_IP=$IP" >> $GITHUB_ENV
        echo "::set-output name=ec2_ip::$IP"

    - name: Output SSH Command
      working-directory: ./terraform
      run: terraform output ssh_connection_command

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t $IMAGE_NAME:$VERSION .
        docker push $IMAGE_NAME:$VERSION

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "VERSION=${{ github.sha }}" > .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          docker pull $IMAGE_NAME:$VERSION
          docker stop invoify || true && docker rm invoify || true
          docker-compose --env-file .env up -d
